%A1 Конкатенация
A1 = [99 8 7];
A2 = [6 5 4];
A3 = [3 2 1];
A = cat(1, A1, A2, A3);

%А2 Массив 3 на 3, от 0 до 1
B = rand(3);

%А3 Почленно умножить А на В
C = mtimes(A,B);

%А4 Расположить элементы матрицы А по возрастанию(по столбцам)
A = sort(A);

%А5 Транспонировать матрицу А
A = transpose(A);

%6 Вычислить обратную матрицу В
B = inv(B);

%7 Макс и мин элементы В и их индексы
[MaxElement, MaxElIndex] = max(B(:));
[MinElemnet, MinElIndex] = min(B(:));

%8 Определитель матрицы В
Det = det(B);

%9 Массив С (видимо 3 на 3) через индексацию и onez(s)
% 18 53 19   37 19 27   79 47 86
C = ones(3);
C(1,1) = 18; C(1,2) = 53; C(1,3) = 19;

C(2,1) = 37; C(2,2) = 19; C(2,3) = 27;

C(3,1) = 79; C(3,2) = 47; C(3,3) = 86;

%10 Решить A*X=C
X = A\C;

%11 Определить массив D = |sin(A)+B^(3/5)|.
D = abs(sin(A)+B.^(3/5));

%12 Задать 2 вектора длинной 3 со случайными значениями от -3 до 3
E = -3+(3+3)*rand(1,3);
F = -3+6*rand(1,3);

%13 Скалярное произведение, векторное произведение и длина каждого вектора
G = dot(E,F);
H = cross(E,F);
I = norm(E);
J = norm(F);

% %1
% x = 0: pi/20 : 4*pi;
% 
% %2
% y = exp(-x.^2);
% z = atan(x.^1/2);
% 
% %3
% % figure; 
% % fplot('exp(-x.^2)', [0 4*pi]); 
% % grid on;
% % title ('Функция y = exp(-x^2)');
% % xlabel('x');
% % ylabel('y');
% % legend();
% % % 
% % figure; 
% % fplot('atan(x.^1/2)', [0 4*pi]); 
% % grid on;
% % title ('Функция z = arctg(x^1^/^2)');
% % xlabel('x');
% % ylabel('y');
% % legend();
% % 
% % %4
% % figure;
% % y1 = exp(-x.^2); 
% % subplot(2,1,1), plot(x,y1); grid on;
% % axis tight
% % xlabel('x');
% % ylabel('y');
% % 
% % y2 = atan(x.^(1/2));
% % subplot(2,1,2) , plot(x,y2); grid on;
% % axis tight
% % xlabel('x');
% % ylabel('y');
% 
% %6
% % figure;
% % fplot ('(atan(x^(1/2)))', [0 4*pi], 'c-x')
% % hold on
% % fplot ('exp(-x^2)', [0 4*pi], 'k-.*')
% % xlabel('x');
% % ylabel('y');
% % title ('Две функции в рамках одних осей');
% % axis tight
% % grid on
% % text(6, 0.5, 'Привет', 'Color', 'g', 'FontSize', 20)
% % legend('Location', 'best');
% 
% %9
% % figure;
% % a=1;
% % b=1;
% % [X,Y] = meshgrid(-10:0.5:10, -10:0.5:10);
% % Z = Y.^2/b.^2 - X.^2/a.^2;
% % mesh(X,Y,Z);
% % xlabel('x');
% % ylabel('y');
% % zlabel('z')
% 
% %1
% Hundred = 0 + 100 * rand(1, 100);
% i = 2;
% while i < 101
%     Hundred(i) = 0;
%     i = i + 2;
% end
% 
% %2
% a=1.45;
% b=0.92;
% z = 0;
% 
% for k = 1:10
%     z = z + cos(a*k)+sin(b);
% end
% 
% %3
% figure;
% y = exp(-x);
% plot(x,y)
% axis([0 4*pi 0 1])
% f = getframe;
% [im,map] = rgb2ind(f.cdata,256);
% im(1,1,1,100) = 0;
% for k = 1:100
%   y = exp(-x.^(k/50));
%   plot(x,y)
%   axis([0 4*pi 0 1])
%   f = getframe;
%   im(:,:,1,k) = rgb2ind(f.cdata,map);
% end
% % imwrite(im,map,'exponent.gif','DelayTime',0,'LoopCount',inf)
% 
figure;
Z = peaks;
surf(Z)
axis tight
axis([0 40 0 40 -20 20])
set(gca,'nextplot','replacechildren')
f = getframe(1);
[im,map] = rgb2ind(f.cdata,256);
im(:,:,1,200) = im;
for k = 1:200
  surf(Z*cos(k))
  f = getframe(1);
  im(:,:,1,k) = rgb2ind(f.cdata,256);
end